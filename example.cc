#include "crc32c/crc32c.h"
#include <cstdio>
int main() {
  uint8_t data[48] = {
      0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
      0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x28, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  };
  std::uint32_t result;
  // Process a raw buffer.
  result = crc32c::Crc32c(data, sizeof(data));
  printf("%x, %u,  expect = d9963a56\n", result, result);

  // Process a std::string.
  std::string string = "abcd";
  result = crc32c::Crc32c(string);
  printf("%x, %u\n", result, result);

  // If you have C++17 support, process a std::string_view.
  std::string_view string_view(string);
  result = crc32c::Crc32c(string_view);
  
  printf("%x, %u\n", result, result);
  return 0;
}